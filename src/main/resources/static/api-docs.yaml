openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /travel-classes/{id}:
    get:
      tags:
        - travel-class-controller
      operationId: getTravelClassById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TravelClassReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - travel-class-controller
      operationId: updateOrCreateTravelClass
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelClassCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TravelClassReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - travel-class-controller
      operationId: deleteTravelClassById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TravelClassReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - travel-class-controller
      operationId: updateTravelClass
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelClassPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TravelClassReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /service-offerings/{id}:
    get:
      tags:
        - service-offering-controller
      operationId: getServiceOfferingById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceOfferingReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - service-offering-controller
      operationId: updateOrCreateServiceOffering
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOfferingCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceOfferingReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - service-offering-controller
      operationId: deleteServiceOfferingById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceOfferingReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - service-offering-controller
      operationId: updateServiceOffering
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOfferingPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceOfferingReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /seat-details/{id}:
    get:
      tags:
        - seat-detail-controller
      operationId: getSeatDetailById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeatDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - seat-detail-controller
      operationId: updateOrCreateSeatDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatDetailCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeatDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - seat-detail-controller
      operationId: deleteSeatDetailById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeatDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - seat-detail-controller
      operationId: updateSeatDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatDetailPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeatDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /reservations/{id}:
    get:
      tags:
        - reservation-controller
      operationId: getReservationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - reservation-controller
      operationId: updateOrCreateReservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - reservation-controller
      operationId: deleteReservationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - reservation-controller
      operationId: updateReservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /payment-statuses/{id}:
    get:
      tags:
        - payment-status-controller
      operationId: getPaymentStatusById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentStatusReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - payment-status-controller
      operationId: updateOrCreatePaymentStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentStatusReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - payment-status-controller
      operationId: deletePaymentStatusById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentStatusReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - payment-status-controller
      operationId: updatePaymentStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentStatusReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /passengers/{id}:
    get:
      tags:
        - passenger-controller
      operationId: getPassengerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PassengerReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - passenger-controller
      operationId: updateOrCreatePassenger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PassengerReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - passenger-controller
      operationId: deletePassengerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PassengerReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - passenger-controller
      operationId: updatePassenger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PassengerReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /flight-services/{id}:
    get:
      tags:
        - flight-service-controller
      operationId: getFlightServiceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightServiceReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - flight-service-controller
      operationId: updateOrCreateFlightService
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightServiceCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightServiceReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - flight-service-controller
      operationId: deleteFlightServiceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightServiceReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - flight-service-controller
      operationId: updateFlightService
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightServicePartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightServiceReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /flight-details/{id}:
    get:
      tags:
        - flight-detail-controller
      operationId: getFlightDetailById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - flight-detail-controller
      operationId: updateOrCreateFlightDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightDetailCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - flight-detail-controller
      operationId: deleteFlightDetailById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - flight-detail-controller
      operationId: updateFlightDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightDetailPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /airports/{id}:
    get:
      tags:
        - airport-controller
      operationId: getAirportById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AirportReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - airport-controller
      operationId: updateOrCreateAirport
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirportCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AirportReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - airport-controller
      operationId: deleteAirportById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AirportReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    patch:
      tags:
        - airport-controller
      operationId: updateAirport
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirportPartialUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AirportReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /travel-classes:
    get:
      tags:
        - travel-class-controller
      operationId: getAllTravelClasses
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelClassReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - travel-class-controller
      operationId: saveTravelClass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelClassCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TravelClassReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /service-offerings:
    get:
      tags:
        - service-offering-controller
      operationId: getAllServiceOfferings
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOfferingReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - service-offering-controller
      operationId: saveServiceOffering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOfferingCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceOfferingReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /seat-details:
    get:
      tags:
        - seat-detail-controller
      operationId: getAllSeatDetails
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SeatDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - seat-detail-controller
      operationId: saveSeatDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatDetailCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeatDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /reservations:
    get:
      tags:
        - reservation-controller
      operationId: getAllReservations
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - reservation-controller
      operationId: saveReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /payment-statuses:
    get:
      tags:
        - payment-status-controller
      operationId: getAllPaymentStatuses
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentStatusReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - payment-status-controller
      operationId: savePaymentStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentStatusReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /passengers:
    get:
      tags:
        - passenger-controller
      operationId: getAllPassengers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassengerReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - passenger-controller
      operationId: savePassenger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PassengerReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /flight-services:
    get:
      tags:
        - flight-service-controller
      operationId: getAllFlightServices
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightServiceReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - flight-service-controller
      operationId: saveFlightService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightServiceCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightServiceReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /flight-details:
    get:
      tags:
        - flight-detail-controller
      operationId: getAllFlightDetails
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - flight-detail-controller
      operationId: saveFlightDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightDetailCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightDetailReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /airports:
    get:
      tags:
        - airport-controller
      operationId: getAllAirports
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirportReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - airport-controller
      operationId: saveAirport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirportCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AirportReadDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDetail'
components:
  schemas:
    ErrorDetail:
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        detailInfo:
          type: string
    TravelClassCreateDto:
      required:
        - capacity
        - name
      type: object
      properties:
        name:
          type: string
          enum:
            - FIRST_CLASS
            - BUSINESS_CLASS
            - PREMIUM_ECONOMY
            - ECONOMY_CLASS
            - BASIC_ECONOMY
        capacity:
          type: integer
          format: int32
    TravelClassReadDto:
      required:
        - capacity
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          enum:
            - FIRST_CLASS
            - BUSINESS_CLASS
            - PREMIUM_ECONOMY
            - ECONOMY_CLASS
            - BASIC_ECONOMY
        capacity:
          type: integer
          format: int32
    ServiceOfferingCreateDto:
      required:
        - flightServiceId
        - offered
        - travelClassId
      type: object
      properties:
        offered:
          type: boolean
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        travelClassId:
          type: integer
          format: int64
        flightServiceId:
          type: integer
          format: int64
    ServiceOfferingReadDto:
      required:
        - flightServiceId
        - id
        - offered
        - travelClassId
      type: object
      properties:
        id:
          type: integer
          format: int64
        offered:
          type: boolean
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        travelClassId:
          type: integer
          format: int64
        flightServiceId:
          type: integer
          format: int64
    SeatDetailCreateDto:
      required:
        - flightDetailId
        - travelClassId
      type: object
      properties:
        travelClassId:
          type: integer
          format: int64
        flightDetailId:
          type: integer
          format: int64
    SeatDetailReadDto:
      required:
        - flightDetailId
        - id
        - travelClassId
      type: object
      properties:
        id:
          type: integer
          format: int64
        travelClassId:
          type: integer
          format: int64
        flightDetailId:
          type: integer
          format: int64
    ReservationCreateDto:
      required:
        - passengerId
        - reservationDateTime
        - seatDetailId
      type: object
      properties:
        passengerId:
          type: integer
          format: int64
        seatDetailId:
          type: integer
          format: int64
        reservationDateTime:
          type: string
          format: date-time
    ReservationReadDto:
      required:
        - id
        - passengerId
        - reservationDateTime
        - seatDetailId
      type: object
      properties:
        id:
          type: integer
          format: int64
        passengerId:
          type: integer
          format: int64
        seatDetailId:
          type: integer
          format: int64
        reservationDateTime:
          type: string
          format: date-time
    PaymentStatusCreateDto:
      required:
        - amount
        - dueDate
        - reservationId
        - status
      type: object
      properties:
        status:
          type: string
        dueDate:
          type: string
          format: date-time
        amount:
          type: number
        reservationId:
          type: integer
          format: int64
    PaymentStatusReadDto:
      required:
        - amount
        - dueDate
        - id
        - reservationId
        - status
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
        dueDate:
          type: string
          format: date-time
        amount:
          type: number
        reservationId:
          type: integer
          format: int64
    PassengerCreateDto:
      required:
        - firstName
        - lastName
        - phoneNumber
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        country:
          type: string
    PassengerReadDto:
      required:
        - firstName
        - id
        - lastName
        - phoneNumber
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        country:
          type: string
    FlightServiceCreateDto:
      required:
        - cost
        - serviceName
      type: object
      properties:
        serviceName:
          type: string
        cost:
          type: number
    FlightServiceReadDto:
      required:
        - cost
        - id
        - serviceName
      type: object
      properties:
        id:
          type: integer
          format: int64
        serviceName:
          type: string
        cost:
          type: number
    FlightDetailCreateDto:
      required:
        - airplaneType
        - arrivalDateTime
        - departureDateTime
        - destinationAirportId
        - sourceAirportId
      type: object
      properties:
        departureDateTime:
          type: string
          format: date-time
        arrivalDateTime:
          type: string
          format: date-time
        airplaneType:
          type: string
          enum:
            - AIRBUS_A380
            - BOEING_747
        sourceAirportId:
          type: integer
          format: int64
        destinationAirportId:
          type: integer
          format: int64
    FlightDetailReadDto:
      required:
        - airplaneType
        - arrivalDateTime
        - departureDateTime
        - destinationAirportId
        - id
        - sourceAirportId
      type: object
      properties:
        id:
          type: integer
          format: int64
        departureDateTime:
          type: string
          format: date-time
        arrivalDateTime:
          type: string
          format: date-time
        airplaneType:
          type: string
          enum:
            - AIRBUS_A380
            - BOEING_747
        sourceAirportId:
          type: integer
          format: int64
        destinationAirportId:
          type: integer
          format: int64
    AirportCreateDto:
      required:
        - city
        - country
        - name
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        country:
          type: string
    AirportReadDto:
      required:
        - city
        - country
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        city:
          type: string
        country:
          type: string
    TravelClassPartialUpdateDto:
      type: object
      properties:
        name:
          type: string
          enum:
            - FIRST_CLASS
            - BUSINESS_CLASS
            - PREMIUM_ECONOMY
            - ECONOMY_CLASS
            - BASIC_ECONOMY
        capacity:
          type: integer
          format: int32
    ServiceOfferingPartialUpdateDto:
      type: object
      properties:
        offered:
          type: boolean
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        travelClassId:
          type: integer
          format: int64
        flightServiceId:
          type: integer
          format: int64
    SeatDetailPartialUpdateDto:
      type: object
      properties:
        travelClassId:
          type: integer
          format: int64
        flightDetailId:
          type: integer
          format: int64
    ReservationPartialUpdateDto:
      type: object
      properties:
        passengerId:
          type: integer
          format: int64
        seatDetailId:
          type: integer
          format: int64
        reservationDateTime:
          type: string
          format: date-time
    PaymentStatusPartialUpdateDto:
      type: object
      properties:
        status:
          type: string
        dueDate:
          type: string
          format: date-time
        amount:
          type: number
        reservationId:
          type: integer
          format: int64
    PassengerPartialUpdateDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        country:
          type: string
    FlightServicePartialUpdateDto:
      type: object
      properties:
        serviceName:
          type: string
        cost:
          type: number
    FlightDetailPartialUpdateDto:
      type: object
      properties:
        departureDateTime:
          type: string
          format: date-time
        arrivalDateTime:
          type: string
          format: date-time
        airplaneType:
          type: string
          enum:
            - AIRBUS_A380
            - BOEING_747
        sourceAirportId:
          type: integer
          format: int64
        destinationAirportId:
          type: integer
          format: int64
    AirportPartialUpdateDto:
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        country:
          type: string
